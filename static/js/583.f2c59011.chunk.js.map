{"version":3,"file":"static/js/583.f2c59011.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Phonebook/Filter/filter.module.css?7d57","components/Phonebook/Filter/Filter.jsx","components/Phonebook/TitlePhonebook/TitlePhonebook.jsx","webpack://react-homework-template/./src/components/Phonebook/Form/form.module.css?b77a","components/Phonebook/Form/Form.jsx","webpack://react-homework-template/./src/components/Phonebook/ContactList/ContactListItem/contactListItem.module.css?7180","components/Phonebook/ContactList/ContactListItem/ContactListItem.jsx","components/Phonebook/ContactList/ContactList.jsx","redux/phoneBook/phoneBook-selecctor.js","components/Phonebook/Phonebook.jsx","pages/ContactsPage/ContactsPage.jsx","webpack://react-homework-template/./src/shared/components/Section/section.module.css?95c2","shared/components/Section/Section.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"filter_container__PmTHW\",\"input\":\"filter_input__vjfXX\"};","import PropTypes from 'prop-types';\n\nimport s from './filter.module.css'\n\nfunction Filter({ onChange, filter }) {\n  return (\n    <div className={s.container}>\n      <label htmlFor=\"filter\" >\n        {' '}\n        Find contact\n      </label>\n      <input\n        className={s.input}\n        value={filter}\n        id=\"filter\"\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default Filter","import PropTypes from 'prop-types';\n\n\nconst TitlePhonebook = ({ title }) => {\n    return (\n        <h2 >{title }</h2>\n    )\n}\n\nTitlePhonebook.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default TitlePhonebook","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form_form__vOz1-\",\"title\":\"form_title__PJs+X\",\"input\":\"form_input__NlTMx\",\"button\":\"form_button__vcM7R\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './form.module.css'\n\nconst Form = ({onSubmit}) => {\n    const [name, setName] = useState('')\n    const [number, setNumber] = useState('')\n\n   const handleChange = (e) => {\n        const {name , value} = e.target\n        switch (name) {\n            case 'name':\n                setName(value)\n                break;\n            \n            case 'number': \n                setNumber(value)\n                break;\n        \n            default:\n                return;\n        }\n    }\n    const onSubmitForm = e => {\n        e.preventDefault()\n        onSubmit({name, number})\n        setName('')\n        setNumber('')\n    }\n\n    return (\n            <form className={s.form} onSubmit={onSubmitForm}>\n                <h3 className={s.title}>Name</h3>\n                <label>\n                    <input\n                        className={s.input}\n                        onChange={handleChange}\n                        value={name}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </label>\n                <h3 className={s.title}>Number</h3>\n                <label>\n                    <input\n                        className={s.input}\n                        onChange={handleChange}\n                        value={number}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </label>\n                <button className={s.button} type='submit'>Add contact</button>\n            </form>\n        )\n}\n\n\nForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n\n\n\nexport default Form","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"contactListItem_button__bf3vy\",\"item\":\"contactListItem_item__J87JM\"};","import PropTypes from 'prop-types';\n\nimport s from './contactListItem.module.css'\n\nconst ContactListItem = ({ options, deleted }) => {\n    \n    const [name, number, id] = options;\n    return (\n    <li className={s.item} >\n        {name}: {number}\n            <button\n                className={s.button}\n        type=\"button\"\n        onClick={() => deleted(id)}\n        >\n        Delete\n        </button>\n    </li>\n    )\n}\n\nContactListItem.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    deleted: PropTypes.func.isRequired,\n}\n\n\nexport default ContactListItem","\nimport PropTypes from 'prop-types';\n\nimport ContactListItem from \"./ContactListItem\";\n\n\nconst ContactList = ({ contacts, deleted }) => {\n    const elements = contacts.map(({ id, name, number }) => {\n            return(\n            <ContactListItem\n            key={id}\n                options={[name, number, id]}\n                deleted={deleted}\n        />\n        )\n        \n    })\n        return (\n            <ul>\n                {elements}\n            </ul>\n        )\n}\n\nContactList.defaultProps = {\n    contacts: [],\n};\n\nContactList.propTypes ={\n    deleted: PropTypes.func,\n        contacts: PropTypes.arrayOf(\n            PropTypes.shape({\n                name: PropTypes.string,\n                number: PropTypes.string,\n                id: PropTypes.string,\n            })\n        ),\n}\n\nexport default ContactList;","export const getContacts = store =>  store.contacts.items\n\nexport const getLoading = store => store.contacts.loading;\nexport const getError = store => store.contacts.error;\nexport const geFilter = store => store.filter;\n","\nimport { useCallback, useEffect} from \"react\"\nimport { useSelector, useDispatch , shallowEqual } from \"react-redux\";\n\nimport Filter from \"./Filter\";\nimport TitlePhonebook from \"./TitlePhonebook\";\nimport Form from \"./Form\"\nimport ContactList from \"./ContactList\";\n\nimport { getContacts, getError, getLoading, geFilter } from \"../../redux/phoneBook/phoneBook-selecctor\";\nimport {\n  getUserContacts,\n  addContact,\n  removeContact,\n} from '../../redux/phoneBook/phoneBook-actions';\n\nimport * as operations from \"../../redux/phoneBook/phoneBook-actions\";\n\nconst Phonebook = () => {\n    const dispatch = useDispatch()\n\n    const contacts = useSelector(getContacts, shallowEqual);\n    const isLoading = useSelector(getLoading, shallowEqual);\n  const error = useSelector(getError, shallowEqual);\n  const filter = useSelector(geFilter, shallowEqual);\n  \n    \n\n    useEffect(() => {\n    dispatch(getUserContacts());\n  }, [dispatch]);\n\n    const addContacts = useCallback(\n    data => dispatch(addContact(data)),\n    [dispatch]\n  );\n\n    const deleteContacts = useCallback(\n    id => dispatch(removeContact(id)),\n    [dispatch]\n  );\n\n  const changeFilter = useCallback(\n    e => {\n      \n      dispatch(operations.filter(e.target.value));\n    },\n    [dispatch]\n  );\n\n  const getFilteredContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n    const filterRequest = filter.toLowerCase();\n    const filteredContacts = contacts.filter(({ name }) => {\n      const res = name.toLowerCase().includes(filterRequest);\n      return res;\n    });\n\n    return filteredContacts;\n  };\n\n\n    return ( \n            <div>\n                <TitlePhonebook title='Phonebook'/>\n            <Form\n                onSubmit={addContacts}\n            />\n            <TitlePhonebook\n                title='Contacts'\n            />\n            <Filter\n                onChange={changeFilter}\n                filter={filter || ''}\n            />\n                <ContactList\n                    contacts={getFilteredContacts()}\n                    deleted={deleteContacts}\n            />\n\n            {!isLoading || <p>loading....</p>}\n            {!error || <p>{error.massage}</p>}\n            </div>\n        )\n}\n\n\nexport default Phonebook","import Section from 'shared/components/Section';\nimport PhoneBook from '../../components/Phonebook/Phonebook';\n\nconst ContactsPage = () => {\n  return (\n    <Section title=\"PhoneBook\">\n      <PhoneBook />\n    </Section>\n  );\n};\n\nexport default ContactsPage;","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"section_section__QWjNu\",\"title\":\"section_title__PalJW\"};","import PropTypes from 'prop-types';\n\nimport s from './section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <div className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.defaultProps = {\n  title: '',\n};\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;"],"names":["onChange","filter","className","s","htmlFor","value","id","type","name","title","onSubmit","useState","setName","number","setNumber","handleChange","e","target","preventDefault","pattern","required","options","deleted","onClick","ContactList","contacts","elements","map","defaultProps","getContacts","store","items","getLoading","loading","getError","error","geFilter","dispatch","useDispatch","useSelector","shallowEqual","isLoading","useEffect","getUserContacts","addContacts","useCallback","data","addContact","deleteContacts","removeContact","changeFilter","operations","filterRequest","toLowerCase","includes","getFilteredContacts","massage","Section","children"],"sourceRoot":""}